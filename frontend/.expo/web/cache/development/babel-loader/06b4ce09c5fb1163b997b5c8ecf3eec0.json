{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/seocho/42OpenProject/frontend/srcs/ShowOneOtherOption.js\";\n\nimport { StyledView, StyledImage, StyledOptionText } from \"./style\";\nimport { Styles } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-modal\";\nimport { opts } from \"./icons\";\nimport { selectFood } from \"./func_data_communication\";\nimport { ip } from \"./data\";\nexport var ShowOneOtherOption = function ShowOneOtherOption(_ref) {\n  var image = _ref.image,\n      navigation = _ref.navigation,\n      imgStyle = _ref.imgStyle;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ismodalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!ismodalVisible);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleModal,\n    styled: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledImage, {\n    source: image,\n    style: imgStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), React.createElement(Modal, {\n    isVisible: ismodalVisible,\n    hasBackdrop: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"\\uC120\\uD0DD\",\n    onPress: function onPress() {\n      selectFood(ip + \"/question\", \"덮밥\", navigation);\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    title: \"\\uCDE8\\uC18C\",\n    onPress: toggleModal,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }))))));\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 70,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 20,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 5,\n    justifyContent: \"space-around\"\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#F194FF\"\n  },\n  textStyle: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/seocho/42OpenProject/frontend/srcs/ShowOneOtherOption.js"],"names":["StyledView","StyledImage","StyledOptionText","Styles","React","useState","Modal","opts","selectFood","ip","ShowOneOtherOption","image","navigation","imgStyle","ismodalVisible","setModalVisible","toggleModal","padding","styles","centeredView","modalView","button","StyleSheet","create","flex","justifyContent","alignItems","marginTop","flexDirection","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","textStyle","color","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import { StyledView, StyledImage, StyledOptionText } from \"./style\";\nimport {\n  Styles,\n  Text,\n  Image,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n  Alert,\n  Pressable,\n  Button,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-modal\";\nimport { opts } from \"./icons\";\nimport { selectFood } from \"./func_data_communication\";\nimport { ip } from \"./data\";\n\nexport const ShowOneOtherOption = ({ image, navigation, imgStyle }) => {\n  const [ismodalVisible, setModalVisible] = useState(false);\n\n  const toggleModal = () => {\n    setModalVisible(!ismodalVisible);\n  };\n\n  return (\n    <>\n      <View>\n        <TouchableOpacity onPress={toggleModal} styled={{ padding: 10 }}>\n          <StyledImage source={image} style={imgStyle} />\n        </TouchableOpacity>\n        <Modal isVisible={ismodalVisible} hasBackdrop={true}>\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <Button\n                title=\"선택\"\n                onPress={() => {\n                  selectFood(`${ip}/question`, \"덮밥\", navigation);\n                }}\n                style={styles.button}\n              />\n              <Button\n                title=\"취소\"\n                onPress={toggleModal}\n                style={styles.button}\n              />\n            </View>\n          </View>\n        </Modal>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: {\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 70,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 20,\n      height: 2,\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 5,\n    justifyContent: \"space-around\",\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#F194FF\",\n  },\n  textStyle: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}