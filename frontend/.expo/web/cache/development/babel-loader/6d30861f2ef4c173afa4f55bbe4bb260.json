{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/seocho/42OpenProject/frontend/srcs/SignUp.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SignUp_Email from \"./SignUp_Email\";\nimport SignUp_NickName from \"./SignUp_NickName\";\nimport SignUp_PassWord from \"./SignUp_PassWord\";\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(SignUp_NickName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }\n  }), React.createElement(SignUp_Email, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  }), React.createElement(SignUp_PassWord, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Ask\",\n    onPress: function onPress() {\n      return navigation.navigate(\"AskPreference\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  nicknamerow: {\n    flexDirection: 'row'\n  },\n  emailrow: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/seocho/42OpenProject/frontend/srcs/SignUp.js"],"names":["React","useState","SignUp_Email","SignUp_NickName","SignUp_PassWord","SignUp","navigation","styles","container","navigate","StyleSheet","create","flex","nicknamerow","flexDirection","emailrow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAClC,SACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAED,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,EAGD,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHC,EAID,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJC,EAKE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMF,UAAU,CAACG,QAAX,CAAoB,eAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADH;AAYA,CAbD;;AAeA,eAAeJ,MAAf;AAwDA,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BC,EAAAA,WAAW,EAAG;AACfC,IAAAA,aAAa,EAAG;AADD,GAJiB;AAO/BC,EAAAA,QAAQ,EAAG;AACZD,IAAAA,aAAa,EAAG;AADJ;AAPoB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, Button, TextInput, StyleSheet } from \"react-native\";\nimport SignUp_Email from './SignUp_Email';\nimport SignUp_NickName from './SignUp_NickName';\nimport SignUp_PassWord from './SignUp_PassWord'\n\nconst SignUp = ({ navigation }) => {\n\treturn (\n    <View style={styles.container}>\n      <Text>회원가입</Text>\n\t  <SignUp_NickName />\n\t  <SignUp_Email />\n\t  <SignUp_PassWord />\n      <Button\n        title=\"Ask\"\n        onPress={() => navigation.navigate(\"AskPreference\")}\n      />\n    </View>\n  );\n}\n\nexport default SignUp;\n\n\n//Ask로 음식이름 데이터 넘김\n/*\n\n\n\n1. 닉네임 넣는 부분\n\t- state: visible = false면 text가 안 보임 true면 보임(<= 서버에서 보낸 답에 의해 결정, default: false)\n\n\t- 입력창\n\t- <Text>\"닉네임을 새로 입력해주세요\"\n\t- 중복확인 버튼: 누르면 서버에 입력값 GET으로 보냄\n\t\t++ getData(url, data) 매개변수 추가 수정해야 함\n\t\t++ 중복확인 버튼마다 다른 url이 부여되어야 함 -> hyahn님과 추가적으로 이야기 나누기\n\n2. 이메일 넣는 부분\n\t- state: visible = false면 text가 안 보임 true면 보임(<= 서버에서 보낸 답에 의해 결정, default: false)\n\t- state: modalvisible \"\"\n\n\t- 이메일 양식 확인하는 함수\n\t\t- @랑 .이 있는지\n\n\t- 입력창\n\t- 팝업창(<= 이메일이 중복인 경우에 modalvisible이 true가 되고 팝업창이 보이게 됨)\n\t\t- \"이미 가입된 이메일입니다\"\n\t\t- 닫기 버튼(modalvisible 다시 false로 바꿈 -> 팝업창 끄기)\n\t- <Text>\"이메일 양식에 맞게 적어주세요\"\n\t- 중복확인 버튼: 누르면 (1) 이메일 양식 확인하는 함수로 입력값 체크(결과값이 true면 서버 전송, false면 visible만 true로 세팅) 서버에 입력값 GET으로 보냄\n\n\n3. 비밀번호 입력하는 부분\n\t- state: visible = false면 text가 안 보임 true면 보임(<= 비밀번호 양식 확인하는 함수 답에 의해 결정, default: false)\n\t- state: visible2 = false면 text가 안 보임 true면 보임(<= 비밀번호 일치여부 확인하는 함수 답에 의해 결정, default: false)\n\n\n\t- 비밀번호 양식 확인하는 함수\n\t\t- 8~20글자\n\t- 비밀번호 일치 여부 확인하는 함수\n\t\t- strcmp함수\n\n\t- 입력창\n\t- <Text>\"8~20글자로 입력해주세요\"\n\n   비밀번호 한번 더 확인차 입력하는 부분\n\t- <Text>\"비밀번호가 일치하지 않습니다\"\n\n질문 페이지로 넘어가는 버튼\n\t- onPress : 서버에 주고 다음 페이지로 넘어가기\n\n\n\n\n*/\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  nicknamerow : {\n\tflexDirection : 'row'\n  },\n  emailrow : {\n\tflexDirection : 'row'\n  }\n});"]},"metadata":{},"sourceType":"module"}